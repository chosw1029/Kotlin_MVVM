/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]

// version
def versions = [:]
versions.kotlin = "1.3.72"
//versions.dagger = "2.25.4"
//versions.firebase = "17.2.2"
//versions.firestore = "21.3.1"
versions.lifecycle = "2.2.0"
versions.coroutine = "1.3.5"
versions.navigation = "2.3.0-alpha01"
versions.timber = "4.7.1"
versions.retrofit = "2.7.1"
versions.koin = "2.1.0-alpha-3"
versions.okhttp = "4.4.0"
deps.versions = versions

// dependency
def deps = [:]

// androidx
def androidx = [:]
androidx.appcompat = "androidx.appcompat:appcompat:1.2.0-alpha02"
androidx.core_ktx = "androidx.core:core-ktx:1.2.0"
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:2.0.0-beta4"
androidx.lifecycle = [
        runtime_ktx  : "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle",
        extensions   : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        viewmodel_ktx: "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle",
        livedata_ktx : "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
]
androidx.navigation = [
        fragment_ktx: "androidx.navigation:navigation-fragment-ktx:$versions.navigation",
        ui_ktx      : "androidx.navigation:navigation-ui-ktx:$versions.navigation"
]
androidx.material = "com.google.android.material:material:1.1.0"
androidx.swiperefresh = "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
deps.androidx = androidx

// kotlin
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.coroutines = [
        core         : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine",
        android      : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine",
        play_services: "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.coroutine",
        test         : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine"
]
deps.kotlin = kotlin

// koin
deps.koin = [
        core     : "org.koin:koin-androidx-scope:$versions.koin",
        viewModel: "org.koin:koin-androidx-viewmodel:$versions.koin"
]

// okhttp
deps.okhttp = [
        core                : "com.squareup.okhttp3:okhttp:$versions.okhttp",
        logging_interceptor : "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
]

// retrofit
deps.retrofit = [
        core        : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        converter_gson  : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
        adapter_rxjava2 : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
]
/*// firebase
deps.firebase = [
        core     : "com.google.firebase:firebase-core:$versions.firebase",
        analytics: "com.google.firebase:firebase-analytics:$versions.firebase",
        firestore: "com.google.firebase:firebase-firestore:$versions.firestore"
]

// Dagger
deps.dagger = [
        android          : "com.google.dagger:dagger-android:$versions.dagger",
        android_support  : "com.google.dagger:dagger-android-support:$versions.dagger",
        compiler         : "com.google.dagger:dagger-compiler:$versions.dagger",
        android_processor: "com.google.dagger:dagger-android-processor:$versions.dagger"
]*/

deps.google = [
        gson: 'com.google.code.gson:gson:2.8.6'
]

// debugging
deps.debugging = [
        timber      : "com.jakewharton.timber:timber:$versions.timber"
]

// test
deps.atsl = [
        junit        : "junit:junit:4.12",
        ext_junit    : "androidx.test.ext:junit:1.1.1",
        espresso_core: "androidx.test.espresso:espresso-core:3.2.0"
]

ext.deps = deps

// build gradle plugin
def gradlePlugin = [
        android      : "com.android.tools.build:gradle:4.0.0",
        kotlin       : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        play_services: "com.google.gms:google-services:4.3.3",
        navigation_safe_args: "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
]
ext.gradlePlugin = gradlePlugin

// build_versions
ext.build_versions = [
        compile_sdk: 29,
        build_tools: "29.0.2",
        min_sdk    : 15,
        target_sdk : 29
]

// repository
def static addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos